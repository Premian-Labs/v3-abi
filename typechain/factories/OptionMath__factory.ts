/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { OptionMath, OptionMathInterface } from "../OptionMath";

const _abi = [
  {
    inputs: [],
    name: "OptionMath__NonPositiveVol",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "UD60x18",
        name: "min",
        type: "uint256",
      },
      {
        internalType: "UD60x18",
        name: "max",
        type: "uint256",
      },
      {
        internalType: "UD60x18",
        name: "price",
        type: "uint256",
      },
    ],
    name: "OptionMath__OutOfBoundsPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "OptionMath__Underflow",
    type: "error",
  },
] as const;

export class OptionMath__factory {
  static readonly abi = _abi;
  static createInterface(): OptionMathInterface {
    return new Interface(_abi) as OptionMathInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): OptionMath {
    return new Contract(address, _abi, runner) as unknown as OptionMath;
  }
}
