/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { PricingMock, PricingMockInterface } from "../PricingMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "PRBMath_MulDiv18_Overflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath_MulDiv_Overflow",
    type: "error",
  },
  {
    inputs: [],
    name: "Pricing__PriceCannotBeComputedWithinTickRange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "UD60x18",
        name: "lower",
        type: "uint256",
      },
      {
        internalType: "UD60x18",
        name: "upper",
        type: "uint256",
      },
      {
        internalType: "UD60x18",
        name: "marketPrice",
        type: "uint256",
      },
    ],
    name: "Pricing__PriceOutOfRange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "UD60x18",
        name: "lower",
        type: "uint256",
      },
      {
        internalType: "UD60x18",
        name: "upper",
        type: "uint256",
      },
    ],
    name: "Pricing__UpperNotGreaterThanLower",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "UD60x18",
        name: "lower",
        type: "uint256",
      },
      {
        internalType: "UD60x18",
        name: "upper",
        type: "uint256",
      },
    ],
    name: "amountOfTicksBetween",
    outputs: [
      {
        internalType: "UD60x18",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "UD60x18",
            name: "liquidityRate",
            type: "uint256",
          },
          {
            internalType: "UD60x18",
            name: "marketPrice",
            type: "uint256",
          },
          {
            internalType: "UD60x18",
            name: "lower",
            type: "uint256",
          },
          {
            internalType: "UD60x18",
            name: "upper",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isBuy",
            type: "bool",
          },
        ],
        internalType: "struct Pricing.Args",
        name: "args",
        type: "tuple",
      },
    ],
    name: "askLiquidity",
    outputs: [
      {
        internalType: "UD60x18",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "UD60x18",
            name: "liquidityRate",
            type: "uint256",
          },
          {
            internalType: "UD60x18",
            name: "marketPrice",
            type: "uint256",
          },
          {
            internalType: "UD60x18",
            name: "lower",
            type: "uint256",
          },
          {
            internalType: "UD60x18",
            name: "upper",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isBuy",
            type: "bool",
          },
        ],
        internalType: "struct Pricing.Args",
        name: "args",
        type: "tuple",
      },
    ],
    name: "bidLiquidity",
    outputs: [
      {
        internalType: "UD60x18",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "UD60x18",
            name: "liquidityRate",
            type: "uint256",
          },
          {
            internalType: "UD60x18",
            name: "marketPrice",
            type: "uint256",
          },
          {
            internalType: "UD60x18",
            name: "lower",
            type: "uint256",
          },
          {
            internalType: "UD60x18",
            name: "upper",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isBuy",
            type: "bool",
          },
        ],
        internalType: "struct Pricing.Args",
        name: "args",
        type: "tuple",
      },
    ],
    name: "liquidity",
    outputs: [
      {
        internalType: "UD60x18",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "UD60x18",
            name: "liquidityRate",
            type: "uint256",
          },
          {
            internalType: "UD60x18",
            name: "marketPrice",
            type: "uint256",
          },
          {
            internalType: "UD60x18",
            name: "lower",
            type: "uint256",
          },
          {
            internalType: "UD60x18",
            name: "upper",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isBuy",
            type: "bool",
          },
        ],
        internalType: "struct Pricing.Args",
        name: "args",
        type: "tuple",
      },
    ],
    name: "maxTradeSize",
    outputs: [
      {
        internalType: "UD60x18",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "UD60x18",
            name: "liquidityRate",
            type: "uint256",
          },
          {
            internalType: "UD60x18",
            name: "marketPrice",
            type: "uint256",
          },
          {
            internalType: "UD60x18",
            name: "lower",
            type: "uint256",
          },
          {
            internalType: "UD60x18",
            name: "upper",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isBuy",
            type: "bool",
          },
        ],
        internalType: "struct Pricing.Args",
        name: "args",
        type: "tuple",
      },
      {
        internalType: "UD60x18",
        name: "tradeSize",
        type: "uint256",
      },
    ],
    name: "nextPrice",
    outputs: [
      {
        internalType: "UD60x18",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "UD60x18",
            name: "liquidityRate",
            type: "uint256",
          },
          {
            internalType: "UD60x18",
            name: "marketPrice",
            type: "uint256",
          },
          {
            internalType: "UD60x18",
            name: "lower",
            type: "uint256",
          },
          {
            internalType: "UD60x18",
            name: "upper",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isBuy",
            type: "bool",
          },
        ],
        internalType: "struct Pricing.Args",
        name: "args",
        type: "tuple",
      },
      {
        internalType: "UD60x18",
        name: "tradeSize",
        type: "uint256",
      },
    ],
    name: "price",
    outputs: [
      {
        internalType: "UD60x18",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "UD60x18",
        name: "lower",
        type: "uint256",
      },
      {
        internalType: "UD60x18",
        name: "upper",
        type: "uint256",
      },
      {
        internalType: "UD60x18",
        name: "marketPrice",
        type: "uint256",
      },
    ],
    name: "proportion",
    outputs: [
      {
        internalType: "UD60x18",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

export class PricingMock__factory {
  static readonly abi = _abi;
  static createInterface(): PricingMockInterface {
    return new Interface(_abi) as PricingMockInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PricingMock {
    return new Contract(address, _abi, runner) as unknown as PricingMock;
  }
}
