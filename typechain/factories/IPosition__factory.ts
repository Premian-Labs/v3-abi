/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { IPosition, IPositionInterface } from "../IPosition";

const _abi = [
  {
    inputs: [],
    name: "Position__InvalidOrderType",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "UD60x18",
        name: "currentBalance",
        type: "uint256",
      },
      {
        internalType: "SD59x18",
        name: "amount",
        type: "int256",
      },
    ],
    name: "Position__InvalidPositionUpdate",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "UD60x18",
        name: "lower",
        type: "uint256",
      },
      {
        internalType: "UD60x18",
        name: "upper",
        type: "uint256",
      },
    ],
    name: "Position__LowerGreaterOrEqualUpper",
    type: "error",
  },
] as const;

export class IPosition__factory {
  static readonly abi = _abi;
  static createInterface(): IPositionInterface {
    return new Interface(_abi) as IPositionInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IPosition {
    return new Contract(address, _abi, runner) as unknown as IPosition;
  }
}
