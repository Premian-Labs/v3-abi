/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  PoolFactoryProxy,
  PoolFactoryProxyInterface,
} from "../PoolFactoryProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "UD60x18",
        name: "discountPerPool",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "feeReceiver",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ProxyUpgradeableOwnable__InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "Proxy__ImplementationIsNotContract",
    type: "error",
  },
  {
    inputs: [],
    name: "SafeOwnable__NotNomineeOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ImplementationSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "quote",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oracleAdapter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "UD60x18",
        name: "strike",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maturity",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isCallPool",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
    ],
    name: "PoolDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[][]",
        name: "basePath",
        type: "address[][]",
      },
      {
        indexed: false,
        internalType: "uint8[]",
        name: "basePathDecimals",
        type: "uint8[]",
      },
      {
        indexed: false,
        internalType: "enum IOracleAdapter.AdapterType",
        name: "baseAdapterType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address[][]",
        name: "quotePath",
        type: "address[][]",
      },
      {
        indexed: false,
        internalType: "uint8[]",
        name: "quotePathDecimals",
        type: "uint8[]",
      },
      {
        indexed: false,
        internalType: "enum IOracleAdapter.AdapterType",
        name: "quoteAdapterType",
        type: "uint8",
      },
    ],
    name: "PricingPath",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "UD60x18",
        name: "discountPerPool",
        type: "uint256",
      },
    ],
    name: "SetDiscountPerPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "feeReceiver",
        type: "address",
      },
    ],
    name: "SetFeeReceiver",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nomineeOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "setImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

export class PoolFactoryProxy__factory {
  static readonly abi = _abi;
  static createInterface(): PoolFactoryProxyInterface {
    return new Interface(_abi) as PoolFactoryProxyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PoolFactoryProxy {
    return new Contract(address, _abi, runner) as unknown as PoolFactoryProxy;
  }
}
