/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { IFeeConverter, IFeeConverterInterface } from "../IFeeConverter";

const _abi = [
  {
    inputs: [],
    name: "FeeConverter__NotAuthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "inAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "outAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "treasuryAmount",
        type: "uint256",
      },
    ],
    name: "Converted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isAuthorized",
        type: "bool",
      },
    ],
    name: "SetAuthorized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sourceToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "callee",
        type: "address",
      },
      {
        internalType: "address",
        name: "allowanceTarget",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "convert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getExchangeHelper",
    outputs: [
      {
        internalType: "address",
        name: "exchangeHelper",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IFeeConverter__factory {
  static readonly abi = _abi;
  static createInterface(): IFeeConverterInterface {
    return new Interface(_abi) as IFeeConverterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IFeeConverter {
    return new Contract(address, _abi, runner) as unknown as IFeeConverter;
  }
}
