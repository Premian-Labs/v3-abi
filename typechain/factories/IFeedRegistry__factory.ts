/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { IFeedRegistry, IFeedRegistryInterface } from "../IFeedRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "FeedRegistry__TokensAreSame",
    type: "error",
  },
  {
    inputs: [],
    name: "FeedRegistry__ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "denomination",
            type: "address",
          },
          {
            internalType: "address",
            name: "feed",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct IFeedRegistry.FeedMappingArgs[]",
        name: "args",
        type: "tuple[]",
      },
    ],
    name: "FeedMappingsRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "denomination",
            type: "address",
          },
          {
            internalType: "address",
            name: "feed",
            type: "address",
          },
        ],
        internalType: "struct IFeedRegistry.FeedMappingArgs[]",
        name: "args",
        type: "tuple[]",
      },
    ],
    name: "batchRegisterFeedMappings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "feed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IFeedRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): IFeedRegistryInterface {
    return new Interface(_abi) as IFeedRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IFeedRegistry {
    return new Contract(address, _abi, runner) as unknown as IFeedRegistry;
  }
}
