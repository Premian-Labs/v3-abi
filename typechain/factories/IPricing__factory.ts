/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { IPricing, IPricingInterface } from "../IPricing";

const _abi = [
  {
    inputs: [],
    name: "Pricing__PriceCannotBeComputedWithinTickRange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "UD60x18",
        name: "lower",
        type: "uint256",
      },
      {
        internalType: "UD60x18",
        name: "upper",
        type: "uint256",
      },
      {
        internalType: "UD60x18",
        name: "marketPrice",
        type: "uint256",
      },
    ],
    name: "Pricing__PriceOutOfRange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "UD60x18",
        name: "lower",
        type: "uint256",
      },
      {
        internalType: "UD60x18",
        name: "upper",
        type: "uint256",
      },
    ],
    name: "Pricing__UpperNotGreaterThanLower",
    type: "error",
  },
] as const;

export class IPricing__factory {
  static readonly abi = _abi;
  static createInterface(): IPricingInterface {
    return new Interface(_abi) as IPricingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IPricing {
    return new Contract(address, _abi, runner) as unknown as IPricing;
  }
}
